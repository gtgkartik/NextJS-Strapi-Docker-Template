version: '3'
# starting with services, we can run many services like frontend backend and db etc...
services:
  nextapp:  #this is the name of the service which is random string
    build:  #we build the Image for the service
      context: ./dockernextapp
      dockerfile: Dockerfile
    container_name: nextjs14
    ports:
      - '3000:3000'
    volumes:
      - ./dockernextapp:/frontend
      - /frontend/node_modules 
      
  strapi:
    container_name: strapi
    build: ./strapibackend
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./strapibackend/config:/opt/app/config
      - ./strapibackend/src:/opt/app/src
      - ./strapibackend/package.json:/opt/package.json
      - ./strapibackend/package-lock.json:/opt/package-lock.json

      - ./strapibackend/.env:/opt/app/.env
      - ./strapibackend/public/uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    networks:
      - strapi
    depends_on:
      - strapiDB
      
  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_ROOT_HOST: '%'
    volumes:
      - ./strapibackend/strapi-data:/var/lib/mysql
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - '3306:3306'
    networks:
      - strapi
      
  strapiAdminer:
    container_name: strapiAdminer
    image: adminer
    restart: unless-stopped
    ports:
      - '9090:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=strapiDB
    networks:
      - strapi
    depends_on:
      - strapiDB

volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge
